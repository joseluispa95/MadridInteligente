{"version":3,"sources":["../../../widgets/ComercioLocal/Widget.js"],"names":["define","declare","BaseWidget","Locator","lang","Graphic","Point","FeatureLayer","Query","Circle","InfoTemplate","SimpleMarkerSymbol","SimpleFillSymbol","SimpleLineSymbol","PictureMarkerSymbol","Color","array","baseClass","buscar","taskLocator","on","hitch","showResults","closebuffer","urlComLoc","comLoc","outFields","map","graphics","clear","objAddress","ubicacion","value","params","address","addressToLocations","borrar","candidates","symbolMarker","setStyle","STYLE_CROSS","setColor","every","addresses","candidate","score","attributesCandidate","locatorName","attributes","Loc_name","geometryLocation","location","graphicResult","add","undefined","centerAndZoom","point","x","y","circle","center","geodesic","radius","distance","radiusUnit","poligonobuffer","STYLE_SOLID","STYLE_DASHDOT","callLocalComerce","LC","localQuery","geometry","selectFeatures","SELECTION_NEW","muestraComLoc","resultados","urlCarni","urlPan","urlFrut","urlPesc","markerCarniceria","setUrl","setHeight","setWidth","markerPescaderia","markerFruteria","markerPanaderia","symbolNull","setSize","forEach","features","feature","json","title","content","template","tipo_comer","setSymbol","setInfoTemplate"],"mappings":"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","file":"Widget.js","sourcesContent":["define(['dojo/_base/declare', 'jimu/BaseWidget',\r\n  \"esri/tasks/locator\",\r\n  \"dojo/_base/lang\",\r\n  \"esri/graphic\",\r\n  \"esri/geometry/Point\",\r\n  \"esri/layers/FeatureLayer\",\r\n  \"esri/tasks/query\",\r\n  \"esri/geometry/Circle\",\r\n  \"esri/InfoTemplate\",\r\n\r\n  \"esri/symbols/SimpleMarkerSymbol\",\r\n  \"esri/symbols/SimpleFillSymbol\",\r\n  \"esri/symbols/SimpleLineSymbol\",\r\n  \"esri/symbols/PictureMarkerSymbol\",\r\n\r\n  \"dojo/_base/Color\",\r\n  \"dojo/_base/array\",\r\n\r\n  \"dojo/dom\",\r\n  \"dojo/on\",\r\n  \"dojo/parser\",\r\n  \"dojo/ready\",\r\n\r\n  \"dijit/layout/BorderContainer\",\r\n  \"dijit/layout/ContentPane\"],\r\nfunction(declare, BaseWidget,Locator,lang,Graphic,Point,FeatureLayer,Query,Circle,InfoTemplate,SimpleMarkerSymbol,SimpleFillSymbol,SimpleLineSymbol,PictureMarkerSymbol,Color,array) {\r\n  //To create a widget, you need to derive from BaseWidget.\r\n  return declare([BaseWidget], {\r\n\r\n    // Custom widget code goes here\r\n\r\n    baseClass: 'comercio-local',\r\n    // this property is set by the framework when widget is loaded.\r\n    // name: 'ComercioLocal',\r\n    // add additional properties here\r\n\r\n    //methods to communication with app container:\r\n\r\n    buscar: function(){\r\n\r\n      // Construimos el localizador\r\n      taskLocator = new Locator(\"http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer\");\r\n      taskLocator.on(\"address-to-locations-complete\",lang.hitch(this,this.showResults));\r\n      taskLocator.on(\"address-to-locations-complete\",lang.hitch(this,this.closebuffer));\r\n\r\n      // Cargamos el servicio de capa de pequeños comercios y le damos una visibilidad falsa para que luego solo se cargen aquellos que aparecen dentro del buffer\r\n      var urlComLoc = 'https://pcjlp/server/rest/services/PFM/localComerce/MapServer/0';\r\n\r\n      comLoc = new FeatureLayer(urlComLoc,{\r\n        outFields: [\"nombre_loc\",\"nombre_bar\",\"tipo_comer\"]\r\n      });\r\n      \r\n      this.map.graphics.clear();\r\n\r\n      var objAddress = {\r\n        \"SingleLine\": this.ubicacion.value\r\n      };\r\n\r\n      var params = {\r\n        address: objAddress,\r\n        outFields: [\"Loc_name\"]\r\n      };\r\n\r\n      taskLocator.addressToLocations(params);\r\n    },\r\n\r\n    borrar: function(){\r\n      this.map.graphics.clear();\r\n\r\n    },\r\n\r\n    showResults(candidates) {\r\n\r\n      // Define the symbology used to display the results\r\n      var symbolMarker = new SimpleMarkerSymbol();\r\n      symbolMarker.setStyle(SimpleMarkerSymbol.STYLE_CROSS);\r\n      symbolMarker.setColor(new Color([255, 0, 0, 0.75]));\r\n      \r\n\r\n      //Recibe el valor de entrada de la función showResults y toma la dirección\r\n      array.every(candidates.addresses,lang.hitch(this,function (candidate) {\r\n\r\n          // Toma el valor que es más probable\r\n          if (candidate.score > 80) {\r\n\r\n            // Recupera información de atributos del candidato\r\n            var attributesCandidate = {\r\n              address: candidate.address,\r\n              score: candidate.score,\r\n              locatorName: candidate.attributes.Loc_name\r\n            };\r\n\r\n            //Toma la localización del candidato\r\n            geometryLocation = candidate.location;\r\n\r\n            // Representa el resultado del localizador\r\n            var graphicResult = new Graphic(geometryLocation, symbolMarker, attributesCandidate);\r\n            this.map.graphics.add(graphicResult);\r\n      \r\n            return false;\r\n\r\n\r\n          } \r\n      }));\r\n\r\n      // Centra y hace zoom a la localización\r\n      if (geometryLocation !== undefined) {\r\n          this.map.centerAndZoom(geometryLocation, 15);\r\n      }\r\n\r\n    },\r\n\r\n    closebuffer(){\r\n\r\n      // Para meter el centro del buffer hace falta añadir la x e y del punto almacenado en el geometryLocation\r\n      point = new Point({\r\n        x : geometryLocation.x,\r\n        y : geometryLocation.y\r\n      });\r\n\r\n      circle = new Circle({\r\n        center: point,\r\n        geodesic: true,\r\n        radius: this.distance.value,\r\n        radiusUnit: \"esriMeters\"\r\n      });\r\n      var poligonobuffer = new SimpleFillSymbol(SimpleFillSymbol.STYLE_SOLID,\r\n            new SimpleLineSymbol(SimpleLineSymbol.STYLE_DASHDOT,\r\n            new Color([255,0,0]), 2),new Color([255,255,0,0.25]\r\n            )\r\n          );\r\n      \r\n      this.map.graphics.add(new Graphic(circle,poligonobuffer));\r\n      this.callLocalComerce(circle)\r\n      \r\n              \r\n    },\r\n\r\n    callLocalComerce(LC){\r\n      \r\n      // Montamos la query\r\n      var localQuery = new Query();\r\n      localQuery.geometry = LC;\r\n      comLoc.selectFeatures(localQuery, FeatureLayer.SELECTION_NEW);\r\n      \r\n      // Creamos una nueva seleción y abrimos una función nueva\r\n      comLoc.on(\"selection-complete\",lang.hitch(this,this.muestraComLoc));\r\n    },\r\n\r\n    muestraComLoc(resultados){\r\n\r\n      // Simbología para los puntos seleccionados por categorías\r\n      // URLs de los archivos .png que utilizaran como icono en la aplicación\r\n      urlCarni = \"./images/meat.png\";\r\n\r\n      urlPan= \"./images/bread.png\";\r\n\r\n      urlFrut = \"./images/healthy-food.png\";\r\n\r\n      urlPesc = \"./images/fish.png\";\r\n\r\n      \r\n\r\n      // Carnicerías\r\n      var markerCarniceria = new PictureMarkerSymbol();\r\n      markerCarniceria.setUrl(urlCarni);\r\n      markerCarniceria.setHeight(25);\r\n      markerCarniceria.setWidth(25);\r\n\r\n      // Pescaderías\r\n      var markerPescaderia = new PictureMarkerSymbol();\r\n      markerPescaderia.setUrl(urlPesc)\r\n      markerPescaderia.setHeight(30);\r\n      markerPescaderia.setWidth(30);\r\n\r\n      // Frutería\r\n      var markerFruteria = new PictureMarkerSymbol();\r\n      markerFruteria.setUrl(urlFrut)\r\n      markerFruteria.setHeight(25);\r\n      markerFruteria.setWidth(25);\r\n\r\n      // Panadería\r\n      var markerPanaderia = new PictureMarkerSymbol();\r\n      markerPanaderia.setUrl(urlPan)\r\n      markerPanaderia.setHeight(25);\r\n      markerPanaderia.setWidth(25);\r\n\r\n      // Simbología NULL\r\n      var symbolNull = new SimpleMarkerSymbol();\r\n      symbolNull.setSize(\"0\");\r\n\r\n      array.forEach(resultados.features,lang.hitch(this,function (feature) {\r\n    \r\n        // Pop-Up\r\n        var json = {title:\"Comercios cercanos\",content:\"<strong>Nombre Local </strong>: ${nombre_loc}<br><strong>Tipo comercio</strong>: ${tipo_comer}<br><strong>Distrito</strong>: ${nombre_bar}\"}\r\n        template = new InfoTemplate(json)\r\n\r\n\r\n        // Ajuste de simbología por tipo de comercio\r\n        if (feature.attributes.tipo_comer === \"Carnicería\") {\r\n\r\n          feature.setSymbol(markerCarniceria);\r\n          feature.setInfoTemplate(template);\r\n\r\n        } else if (feature.attributes.tipo_comer === \"Pescadería\") {\r\n\r\n          feature.setSymbol(markerPescaderia);\r\n          feature.setInfoTemplate(template);\r\n\r\n        }else if (feature.attributes.tipo_comer === \"Frutería\") {\r\n\r\n          feature.setSymbol(markerFruteria);\r\n          feature.setInfoTemplate(template);\r\n          \r\n        } else if (feature.attributes.tipo_comer === \"Panadería\") {\r\n\r\n          feature.setSymbol(markerPanaderia);\r\n          feature.setInfoTemplate(template);\r\n          \r\n        } else {\r\n\r\n          feature.setSymbol(symbolNull);\r\n        }\r\n\r\n        this.map.graphics.add(feature);\r\n\r\n    }));\r\n\r\n    \r\n\r\n  }\r\n\r\n  });\r\n});\r\n"]}